글 리스트 로직

세팅 -
0. totalPage 변수를 선언한다.

1. 페이지 정보를 받는다.
	- 없으면 null 값 출력
2. 서치 키워드를 받는다. ★★☆
	- 없으면 전체 페이지 기준 입력 데이터를 구한다.
	- totalPage 개수를 구한다.

*****************************************************************
값 노출 -
0. 컬렉션 프레임 워크, Dto.java 데이터를 기준으로 만든다.

1. 컬렉션 프레임 데이터 .size 만큼 반복문 생성
	- 실질적 게시판 출력 영역
*****************************************************************
페이지 블럭 -
0. 앞서 구한 pageNum int열로 변경
0. 앞서 구한 totalPage 값 사용 예정

1. 전체 블럭 수 구하기
	- totpalPage / PAGE_AMOUNT를 하여 if 6/3 = 2, so 총 2개 블럭 존재 형식으로 계산한다.
2. 현재 블럭 구하기
	-nPageNum / PAGE_AMOUNT를 하여 if 3/3 = 1, so 1번 블록, 7/3 =3 so 3번 블록의 형식으로 계산한다.
3. 블럭 시작 페이지 구하기
	-(1-1)*3+1 ... currentBlockNo이 1이면 0으로 만든 후, 0*3(amount)를 한 후 +1 을 하여 블럭 각 블럭별 시작 페이지 탐색
4. 마지막 블럭 페이지 구하기
	-currentBlockNo = (if 5/3=2) , * 3 = 6 // 단순히 (현재 블럭) *(한 블럭에 노출 되는 수)를 계산한다.
	결과값이 현재 블럭에서 보이는 페이지 번호의 최대번이다.
	★ if ( 마지막 블럭이 최대 페이지 넘버를 넘을 수 없다!?!?)
	[1 2 3] / [ 4 5 ] (6??) 이 6번을 지우는 식 
*****************************************************************
이전/다음 블럭 버튼 -
0. prevPage , nextPage 값 선언

1. 이전 블럭 버튼 활성화 유무 검색
	- boolean hasPrev 값 생성
	- 1이다 = false = 이동불가능so, hasPrev true 항목에서 값 상승
	- 이전블록 버튼 활성화 식 :: currentBlockNo = (if 6/3=2)-1 = 1 * 3 = 3 // 2번 블록 이상에서만 1 이상의 값 생성
	- // 이전버튼 누르면 올 최대값
2. 다음 블럭 버튼 활성와 유무 검색
	- boolean hasNext 값 생성
	- cuz. 현재블럭 == 토탈, if 다음 가기 불가 해야 함
	- 작다 = true = 이동가능so, nextPage hasNext  true에서 실행
	- c...B...No (6/3 = 2) * 3 +1 = 4 // 다음버튼 누르면 올 최소값
*****************************************************************
하단 버튼 출력 영역 -
0. 이전 [번호] 다음 순서로 연결

1. hasPrev = true 경우 이전 버튼 보이기
	- page를 이전 버튼 누를 경우 올 블럭의 최대값으로 변경
	- 검색x) list 실행, 페이지 새로보기
	- 검색o) & == and 명령어로 searchWord 포함

2. 블럭 시작 페이지 ~ 마지막 블럭 페이지 사이의 숫자 갖고오깅
	- for문으로 시작 블록 시작, 블록끝 지정
	- 1. 현재 페이지랑 같으면 링크 생략
	- 2. 검색모드 or 전체모드 구분

3. hasNext = true 경우 다음 버튼 보이기
	- page를 다음 버튼 누를 경우 올 블럭의 최소값으로 변경
	- 검색x) list 실행, 페이지 새로보기
	- 검색o) & == and 명령어로 searchWord 포함