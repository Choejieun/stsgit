/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.80
 * Generated at: 2024-02-07 07:11:52 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.peisia.list.PrevNaxtProc;
import com.peisia.list.PageBlock_F;
import org.apache.naming.HandlerRef;
import com.peisia.db.Dto;
import java.util.ArrayList;
import com.peisia.db.Dao;
import java.sql.ResultSet;
import java.sql.Statement;
import java.sql.DriverManager;
import java.sql.Connection;
import java.sql.DatabaseMetaData;
import com.peisia.db.Board;
import com.peisia.list.Setting;
import com.peisia.list.PageBlock_F;
import com.peisia.list.PrevNaxtProc;

public final class x_005ftop_005flist_005fDesign_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.peisia.db.Dao");
    _jspx_imports_classes.add("com.peisia.list.Setting");
    _jspx_imports_classes.add("java.sql.Connection");
    _jspx_imports_classes.add("org.apache.naming.HandlerRef");
    _jspx_imports_classes.add("java.sql.DatabaseMetaData");
    _jspx_imports_classes.add("com.peisia.list.PageBlock_F");
    _jspx_imports_classes.add("java.util.ArrayList");
    _jspx_imports_classes.add("com.peisia.db.Board");
    _jspx_imports_classes.add("com.peisia.db.Dto");
    _jspx_imports_classes.add("com.peisia.list.PrevNaxtProc");
    _jspx_imports_classes.add("java.sql.ResultSet");
    _jspx_imports_classes.add("java.sql.Statement");
    _jspx_imports_classes.add("java.sql.DriverManager");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!-- 자바연결 -->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- 이 import 문 추가 -->\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("	href=\"/CSS/common.css?ver=");
      out.print( System.currentTimeMillis() );
      out.write("\">\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "x_top_Design.jsp", out, false);
      out.write("\r\n");
      out.write("	<div id=\"mid\">\r\n");
      out.write("		");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "x_left_Design.jsp", out, false);
      out.write("\r\n");
      out.write("		<div id=\"main\">\r\n");
      out.write("			<img alt=\"중앙\" src=\"/img/mid.png\" width=\"100%\"> <br>\r\n");
      out.write("			<div id=\"title\">\r\n");
      out.write("				<h1>커뮤니티</h1>\r\n");
      out.write("				다양한 사람을 만나고 생각의 폭을 넓혀보세요.\r\n");
      out.write("			</div>\r\n");
      out.write("			<div id=\"toolbar\">\r\n");
      out.write("				<!-- 작성하기 영역 -->\r\n");
      out.write("				<div id=\"toolbar_write\">\r\n");
      out.write("					<a href=\"/write.jsp\">✔작성하기</a>\r\n");
      out.write("				</div>\r\n");
      out.write("				<nav id=\"mid_li\">\r\n");
      out.write("					<ul>\r\n");
      out.write("						<li><a href=\"/board/list?topick=lite&old=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${blp.arrayOld}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("&word=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${blp.searchWord}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">사는얘기</a></li>\r\n");
      out.write("						<li><a href=\"/board/list?topick=gathering&old=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${blp.arrayOld}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("&word=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${blp.searchWord}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">모임&스터디</a></li>\r\n");
      out.write("						<li><a href=\"/board/list?topick=all&old=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${blp.arrayOld}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">전체</a></li>\r\n");
      out.write("					</ul>\r\n");
      out.write("				</nav>\r\n");
      out.write("				<button id=\"toggleButton\">정렬</button>\r\n");
      out.write("				<div id=\"overlay\"></div>\r\n");
      out.write("				<div id=\"modal\" >\r\n");
      out.write("					<ul>\r\n");
      out.write("						");
Setting blp = (Setting) request.getAttribute("blp");  
      out.write("\r\n");
      out.write("						");
      out.print(blp.getarrayOld_buttom());
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("					</ul>\r\n");
      out.write("				</div>\r\n");
      out.write("\r\n");
      out.write("				<script>\r\n");
      out.write("  var toggleButton = document.getElementById('toggleButton');\r\n");
      out.write("  var modal = document.getElementById('modal');\r\n");
      out.write("  var overlay = document.getElementById('overlay');\r\n");
      out.write("  var closeButton = document.getElementById('closeButton');\r\n");
      out.write("  \r\n");
      out.write("  // 버튼 실행 시 아래 함수 실행\r\n");
      out.write("  toggleButton.onclick = function() { \r\n");
      out.write("    modal.style.display = 'block';\r\n");
      out.write("    overlay.style.display = 'block';\r\n");
      out.write("  };\r\n");
      out.write("\r\n");
      out.write("  // 최신순, 오래된순 영역 외에 아무 곳이나 클릭하면 팝업이 다시 닫힘\r\n");
      out.write("  overlay.onclick = function() {\r\n");
      out.write("    modal.style.display = 'none';\r\n");
      out.write("    overlay.style.display = 'none';\r\n");
      out.write("  };\r\n");
      out.write("\r\n");
      out.write("// //   버튼 실행 시 아래 펑션 실행\r\n");
      out.write("//   toggleButton.addEventListener('click', function() { \r\n");
      out.write("//     modal.style.display = 'block';\r\n");
      out.write("//     overlay.style.display = 'block';\r\n");
      out.write("//   });\r\n");
      out.write("\r\n");
      out.write("// //   #최신순,오래된순 영역 외에 아무 곳이나  클릭하면 팝업이 다시 닫힘\r\n");
      out.write("//   overlay.addEventListener('click', function() {\r\n");
      out.write("// 	    modal.style.display = 'none';\r\n");
      out.write("// 	    overlay.style.display = 'none';\r\n");
      out.write("// 	  });\r\n");
      out.write("</script>\r\n");
      out.write("				<!-- 					ㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇ -->\r\n");
      out.write("\r\n");
      out.write("			</div>\r\n");
      out.write("			<!-- 작성하기 영역 -->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("			<div id=\"toolbar_word\">\r\n");
      out.write("				<!-- 검색영역 -->\r\n");
      out.write("				<form action=\"/board/list\" method=\"get\">\r\n");
      out.write("					<div id=\"toolbar_word_button\">\r\n");
      out.write("						<div class=\"textarea\">\r\n");
      out.write("							<input class=\"inputvalue\" type=\"text\" name=\"word\"\r\n");
      out.write("								placeholder=\"검색어를 입력해주세요\"> \r\n");
      out.write("								<input type=\"hidden\"value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${blp.topick}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" name=\"topick\">\r\n");
      out.write("								<input type=\"hidden\"value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${blp.arrayOld}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" name=\"old\">\r\n");
      out.write("						</div>\r\n");
      out.write("					</div>\r\n");
      out.write("				</form>\r\n");
      out.write("			</div>\r\n");
      out.write("			<!-- 검색영역-->\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
